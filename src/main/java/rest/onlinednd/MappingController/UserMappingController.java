package rest.onlinednd.MappingController;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.*;
import rest.onlinednd.Entities.User;
import rest.onlinednd.Repositories.UserRepository;

@RestController
@RequestMapping("/api/v1.0/User")
public class UserMappingController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;


//    @GetMapping("/{id}")
//    public @ResponseBody User getUser(@PathVariable int id) {
//
//        return new User();
//    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    @PostMapping(
            //consumes = {MediaType.APPLICATION_JSON_VALUE}
    )
    //@ResponseStatus(HttpStatus.OK)
    public @ResponseBody String postUser(@RequestBody User user) {
        if(user != null)
            userRepository.save(user);

        return "Account : "  + " wurde angelegt";
    }

//    @PostMapping(
//            path = "/login",
//            consumes = {MediaType.APPLICATION_JSON_VALUE}
//    )
//    @ResponseStatus(HttpStatus.OK)
//    public int loginUser() {
//        int localID = 0;
//
//
//        return localID;
//    }
//
//    @PutMapping(
//            path = "/{id}",
//            consumes = {MediaType.APPLICATION_JSON_VALUE}
//    )
//    @ResponseStatus(HttpStatus.OK)
//    public String updateUserEmail(@PathVariable int id) {
//
//        return "Account Email wurde geändert.";
//    }
//
//    @PutMapping(
//            path = "/{id}",
//            consumes = {MediaType.APPLICATION_JSON_VALUE}
//    )
//    @ResponseStatus(HttpStatus.OK)
//    public String updateUserPassword(@PathVariable int id) {
//
//        return "Account Passwort wurde geändert.";
//    }
//
//    @DeleteMapping(
//            path = ("/{id}")
//    )
//    public String deleteUser(@PathVariable int id) {
//        return "Account wurde gelöscht";
//    }
}